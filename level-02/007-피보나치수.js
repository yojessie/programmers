// 2022-09-14
// https://school.programmers.co.kr/learn/courses/30/lessons/12945

function solution(n) {
  let num = [0, 1];

  for (let i = 0; i <= n; i++) {
    num.push((num[i] + num[i + 1]) % 1234567);
  }

  return num[n];
}

// 와 이번 문제는 좀 신기했다.
// 로직은 틀리지 않은 것 같은데 케이스 7번부터 주르륵 틀려버려서 고민하다가 질문게시판을 둘러봤는데 좋은 설명이 있었다.
// 컴퓨터에서 자료형은 -2,147,483,648 ~ 2,147,483,647까지의 값만을 표현할 수 있다고하는데
// 피보나치 수열을 구현할때 44번째 숫자까지만 가도 2,971,215,073로 자료형 범위를 넘어버리는 문제가 발생한다.

// 문제에서 n번째 피보나치 수를 1234567로 나눈 나머지값을 반환하라고 했으므로
// 반복문을 이용해 수열을 만들때 미리 나머지값을 구해 push하고 return 하는것으로 수정하면 되는 거였다.
// 똑똑한 사람들...
